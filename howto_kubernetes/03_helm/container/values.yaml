# # Container values for python development.
# # certificate, configmap - name 변경
# # domain name,  service port 변경

# replica_cnt: 1

# host:
#   name: devpy-test
#   # node: knode2
#   etc_hosts:
#     - ip: 192.168.7.51
#       hostnames:
#         - tmaster
#         - registry.kwp.lab
#     - ip: 192.168.7.52
#       hostnames:
#         - tnode1

# command: sleep infinity

# restart_policy: Always

# image:
#   name: registry.kwp.lab/pycommon-devel:cpu-build001
#   pull_secrets: registry-creds
#   pull_policy: Always
#   env:
#     USER: kwp
#     USER_UID: 1000

# service:
#   - name: apiserver
#     service_port: 8812
#     container_port: 8000
#     protocol: TCP

# volume:
#   - name: src
#     pvc_name: nfs-dev-client 
#     mount_path: /workspace
#     read_only: false

# certificate:
#   - name: certificate-de
#     create_issue:
#       issuer_ref_name: k3s-ca-issuer
#       common_name: kwpapi.de.lab
#       dns_names:
#         - kwpapi.de.lab
#     mount:
#       mount_path: /crt
#       read_only: true

# ingress:
#   annotations:
#     - key: backend-protocol
#       value: HTTPS
#     - key: client-max-body-size
#       value: 10000m
#     - key: proxy-body-size
#       value: 10000m
#     - key: proxy-read-timeout
#       value: "600000"
#     - key: proxy-send-timeout
#       value: "600000"
#     - key: rewrite-target
#       value: /
#   domain: kwpapi.de.lab
#   service_port: 8812
#   secret_name: dev-api-certificate

# configmap:
#   - name: postgresql-de
#     datas:
#       - file_name: tortoise.yaml
#         file_namespace: tortoise
#         file_tag: 1.0
#         file_data:
#           - key: dbpool
#             value: TortoiseORM.settings
#           - key: dbpool.DB_HOST
#             value: "postgresql-hl.postgresql"
#           - key: dbpool.DB_NAME
#             value: "kwp"
#           - key: dbpool.DB_USER
#             value: "kwp"
#           - key: dbpool.DB_PASS
#             value: "kwp"
#           - key: dbpool.DB_POOL_MAX
#             value: 5
#           - key: dbpool.DB_POOL_MIN
#             value: 1
#           - key: dbpool.ORM_GENERATE_SCHEMAS
#             value: False
#           - key: dbpool.JINJA2MAPPER
#             valye: True
#           - key: dbpool.JINJA2MAPPER_CONF_PACKAGE
#             value: "apiserver.dao.sqlmap"
#           - key: dbpool.JINJA2MAPPER_CONFS
#             value: ["check_sqlmap.yaml", "dashboard_sqlmap.yaml", "tags_sqlmap.yaml", "events_sqlmap.yaml", "models_sqlmap.yaml", "settings_sqlmap.yaml"]
#           - key: dbpool.JINJA2MAPPER_TAG
#             value: 1.0
#           - key: dbpool.ORM_MODELS
#             value: ["apiserver.model"]
#     mount:
#       mount_path: /config
#       read_only: true
      
  

