- name: Add Helm Repository
  become: false
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: "https://charts.bitnami.com/bitnami"

- name: Make Namespace
  become: false
  shell: |
    kubectl create namespace postgresql

- name: Make Local Volume
  become: false
  shell: |
    cat << EOF | kubectl apply -f -
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: locvol-postgresql
      namespace: postgresql
    spec:
      storageClassName: local-path
      resources:
        requests:
          storage: {{ kube_postgresql.storage }}
      accessModes:
        - ReadWriteOnce
    EOF

- name: Install PostgreSQL Chart
  become: false
  kubernetes.core.helm:
    name: postgresql
    chart_ref: bitnami/postgresql
    release_namespace: postgresql
    release_values:
      auth:
        postgresPassword: "{{ kube_postgresql.postgresPassword }}"
        username: "{{ kube_postgresql.username }}"
        password: "{{ kube_postgresql.password }}"
        database: "{{ kube_postgresql.database }}"
      nodeSelector: {
        "kubernetes.io/hostname": "{{ kube_postgresql.node }}"
      }
      persistence:
        existingClaim: "locvol-postgresql"

- name: Make Develop Service
  become: false
  shell: |
    cat << EOF | kubectl apply -f -
    apiVersion: v1
    kind: Service
    metadata:
      name: postgresql-dev
      namespace: postgresql
    spec:
      type: LoadBalancer
      ports:
        - port: {{ kube_postgresql.port_expose }}
          targetPort: 5432
          protocol: TCP
      selector:
        app.kubernetes.io/instance: postgresql
        app.kubernetes.io/name: postgresql
    EOF
  when: 
    - k3s_cluster.mode != 'product'

- name: Wait for pods to come up
  become: false
  shell: kubectl get pods -n postgresql -o json | jq '.items | map(select(.status.phase != "Running")) | length'
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "0"
  retries: 60
  delay: 10
