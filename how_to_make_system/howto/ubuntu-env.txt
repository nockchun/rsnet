###########################################################################
# Error Fix
* Linux Mint 19.1 gconf2 error when upgrade all
user:~$ sudo dpkg --configure -a
user:~$ sudo apt-get --fix-broken install
user:~$ sudo apt-get remove --purge gconf2 && sudo apt-get install gconf2


###########################################################################
# Install Fonts
* Nanum & Common Fonts Install
user# sudo apt-get install fonts-unfonts-core fonts-unfonts-extra fonts-baekmuk fonts-nanum fonts-nanum-coding fonts-nanum-extra

* D2Coding Fonts Install
user:~$ wget https://github.com/naver/d2codingfont/releases/download/VER1.21/D2Coding-1.2.zip
user:~$ sudo mkdir /usr/share/fonts/truetype/D2Coding
user:~$ sudo unzip D2Coding-1.2.zip -d /usr/share/fonts/truetype/D2Coding/
user:~$ sudo rm -rf /usr/share/fonts/truetype/D2Coding/__MACOSX
user:~$ sudo fc-cache -f -v


###########################################################################
# Sublime Text 3
user:~$ wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
user:~$ sudo apt-get install apt-transport-https
user:~$ echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
user:~$ sudo apt-get update
user:~$ sudo apt-get install sublime-text sublime-merge

* Setting Up Sublime Text 3 Plugins
1. SideBarEnhancements
	> site : https://github.com/titoBouzout/SideBarEnhancements
	> Sidebar에 대해 확장기능 플러그인.

2. Emmet
	> site : https://github.com/sergeche/emmet-sublime
	> HTML 및 CSS 작업을 도와주는 플러그인.

3. SFTP
	> site : http://wbond.net/sublime_packages/sftp
	> sftp를 통해 서버와 파일 교환을 도와주는 플러그인.

4. AutoBackups
	> site : https://github.com/akalongman/sublimetext-autobackups
	> 편집하는 문서들에 대해 자동으로 백업을 해 주는 플러그인.
		{
			"backup_dir": "/data/workspace/backup/sublime",
		}

5. SublimeCodeIntel
	> site : https://github.com/SublimeCodeIntel/SublimeCodeIntel
	> 소스코드에 intelligence 기능과 smart autocomplete 기능을 지원하는 플러그인.
	> Key For Linux:
		- Jump to definition = ``Super+Click``
		- Jump to definition = ``Control+Super+Alt+Up``
		- Go back = ``Control+Super+Alt+Left``
		- Manual CodeIntel = ``Control+Shift+space``
	> Key For Windows:
		- Jump to definition = ``Alt+Click``
		- Jump to definition = ``Control+Windows+Alt+Up``
		- Go back = ``Control+Windows+Alt+Left``
		- Manual CodeIntel = ``Control+Shift+space``

6. DocBlockr
	> site : https://github.com/spadgos/sublime-jsdocs
	> 함수들의 주석문 template을 자동으로 생성.

7. DocBlockr Python
	> site : https://github.com/adambullmer/sublime_docblockr_python
	> 함수들의 주석문 template을 자동으로 생성.

8. AdvancedNewFile
	> site : https://github.com/skuroda/Sublime-AdvancedNewFile
	> 새파일을 만들게 해 주는 플러그인.

9. Terminality & Terminal
	> ctrl + alt + r : 터미널을 sublime text 안에서 열어 줌.
	> ctrl + shift + t : 시스템 터미널을 현재 파일 디렉토리에서 열어 줌.

10. Pretty JSON & HTML-CSS-JS Prettify
	> 문서 포맷을 예쁘게 만들어 줌.

11. Compare Side-By-Side
	> 2개의 문서를 비교해서 틀린부분을 보여줌.

12. GitSavvy
	> git 사용을 도와주는 플러그인.
	> 기본 설정.
		- git config --global user.email "you@example.com"
		- git config --global user.name "Your Name"

13. materialize & soda
	> site : https://github.com/saadq/Materialize
	> UI 테마
	> setting
		"color_scheme": "Packages/Materialize/schemes/Material Monokai Soda.tmTheme",
		"theme": "Soda Dark 3.sublime-theme",
		"font_face": "D2Coding",
		"font_size": 13,
		"line_padding_bottom": 2,
		"line_padding_top": 2,
		"margin": 0,
		"material_theme_compact_panel": true,
		"material_theme_compact_sidebar": true,
		"material_theme_contrast_mode": true,
		"material_theme_small_statusbar": true,
		"material_theme_small_tab": true,
		"material_theme_tabs_autowidth": true,
		"overlay_scroll_bars": "enabled",
		"indent_guide_options": [ "draw_normal", "draw_active" ]


###########################################################################
# Virtualbox 6
user# wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
user# echo "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian bionic contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list
user# sudo apt update
user# sudo apt install -y virtualbox-6.0


###########################################################################
# OBS Studio
user:~$ sudo add-apt-repository ppa:obsproject/obs-studio
user:~$ sudo apt install ffmpeg
user:~$ sudo apt update
user:~$ sudo apt install obs-studio

###########################################################################
# Kdenlive
user:~$ sudo add-apt-repository ppa:kdenlive/kdenlive-stable
user:~$ sudo apt update
user:~$ sudo apt install kdenlive
user:~$ sudo apt install frei0r-plugins dvgrab recordmydesktop dvdauthor mkisofs vlc


###########################################################################
# Memory Clean
* Check Memory
user:~$ sudo free -m

* Drop Cache
user:~$ sudo sysctl vm.drop_caches=3


###########################################################################
# Terminator
user:~$ sudo apt install -y terminator
Toggle fullscreen                          : F11.
Split terminals horizontally               : Ctrl + Shift + O.
Split terminals vertically                 : Ctrl + Shift + E.
Close current Panel                        : Ctrl + Shift + W.
Open new tab                               : Ctrl + Shift + T.
Move to the terminal above the current one : Alt + ↑
Move to the terminal below the current one : Alt + ↓


###########################################################################
###                         Kubernetest Install                         ###
###########################################################################

###########################################################################
# Network Config : netPlan
root:~$ vi /etc/netplan/01-netcfg.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s3:
      dhcp4: no
      dhcp6: no
      addresses: [10.10.1.101/24]
      gateway4: 10.10.1.1
      nameservers:
        addresses: [8.8.8.8, 8.8.4.4]
root:~$ netplan apply

###########################################################################
# Change Host Name & Hosts Info
root:~$ hostnamectl set-hostname "K8Master"
root:~$ cat >> /etc/hosts<<EOF
10.10.1.101 master.lab master
10.10.1.111 node01.lab node01
10.10.1.112 node02.lab node02
EOF

###########################################################################
# Docker Install Ubuntu
user:~$ sudo apt install apt-transport-https ca-certificates curl software-properties-common
user:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#user:~$ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
user:~? sudo echo -e "\ndeb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable" | sudo tee -a /etc/apt/sources.list
user:~$ sudo apt update
user:~$ sudo apt install -y docker-ce=5:19.03.4~3-0~ubuntu-bionic docker-ce-cli=5:19.03.4~3-0~ubuntu-bionic containerd.io=1.2.10-3
user:~$ sudo usermod -aG docker $USER

# Update swap & sysctl settings for Kubernetes networking ------------------------
root# swapoff -a
root# sed -i '/swap/d' /etc/fstab
root# cat >>/etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF
root# sysctl --system

# Setup daemon
root# cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
root# mkdir -p /etc/systemd/system/docker.service.d
root# systemctl daemon-reload
root# systemctl restart docker

###########################################################################
# Kubernetes Install Ubuntu
root:~$ curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
root:~$ sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
root:~$ apt install -y kubelet kubeadm kubectl

###########################################################################
# Setting Up Kubernetes Master
user:~$ sudo kubeadm init --apiserver-advertise-address=10.10.1.101 --pod-network-cidr=10.10.0.0/16
user:~$ mkdir ~/.kube
user:~$ sudo cp /etc/kubernetes/admin.conf ~/.kube/config
user:~$ sudo chown -R rsnet:rsnet ~/.kube
user:~$ kubectl create -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml
user:~$ kubeadm token create --print-join-command

# Change Worker Node Host Name
user:~$ sudo hostnamectl set-hostname "K8Node01"
